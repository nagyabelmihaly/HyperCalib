#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Oct 19, 2018 04:07:32 PM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    gui_support.set_Tk_var()
    top = Hyperelastic_curve_fit (root)
    gui_support.init(root, top)
    root.mainloop()

w = None
def create_Hyperelastic_curve_fit(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    gui_support.set_Tk_var()
    top = Hyperelastic_curve_fit (w)
    gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Hyperelastic_curve_fit():
    global w
    w.destroy()
    w = None


class Hyperelastic_curve_fit:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font9 = "-family {Segoe UI} -size 9 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"

        top.geometry("1531x694+248+228")
        top.title("Hyperelastic curve fit")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.ButtonProcess = Button(top)
        self.ButtonProcess.place(x=20, y=20,  height=26, width=470)
        self.ButtonProcess.configure(activebackground="#d9d9d9")
        self.ButtonProcess.configure(activeforeground="#000000")
        self.ButtonProcess.configure(background="#d9d9d9")
        self.ButtonProcess.configure(command=gui_support.ButtonProcess_Click)
        self.ButtonProcess.configure(disabledforeground="#a3a3a3")
        self.ButtonProcess.configure(foreground="#000000")
        self.ButtonProcess.configure(highlightbackground="#d9d9d9")
        self.ButtonProcess.configure(highlightcolor="black")
        self.ButtonProcess.configure(pady="0")
        self.ButtonProcess.configure(text='''Process File''')

        self.FramePlot = Frame(top)
        self.FramePlot.place(x=510, y=350, height=280, width=500)
        self.FramePlot.configure(relief=GROOVE)
        self.FramePlot.configure(borderwidth="2")
        self.FramePlot.configure(relief=GROOVE)
        self.FramePlot.configure(background="#d9d9d9")
        self.FramePlot.configure(highlightbackground="#d9d9d9")
        self.FramePlot.configure(highlightcolor="black")
        self.FramePlot.configure(width=500)

        self.FrameNavigationPlot = Frame(top)
        self.FrameNavigationPlot.place(x=510, y=640, height=40, width=500)
        self.FrameNavigationPlot.configure(relief=GROOVE)
        self.FrameNavigationPlot.configure(borderwidth="2")
        self.FrameNavigationPlot.configure(relief=GROOVE)
        self.FrameNavigationPlot.configure(background="#d9d9d9")
        self.FrameNavigationPlot.configure(highlightbackground="#d9d9d9")
        self.FrameNavigationPlot.configure(highlightcolor="black")
        self.FrameNavigationPlot.configure(width=500)

        self.ButtonFitModel = Button(top)
        self.ButtonFitModel.place(x=20, y=60,  height=26, width=470)
        self.ButtonFitModel.configure(activebackground="#d9d9d9")
        self.ButtonFitModel.configure(activeforeground="#000000")
        self.ButtonFitModel.configure(background="#d9d9d9")
        self.ButtonFitModel.configure(command=gui_support.ButtonFitModel_Click)
        self.ButtonFitModel.configure(disabledforeground="#a3a3a3")
        self.ButtonFitModel.configure(foreground="#000000")
        self.ButtonFitModel.configure(highlightbackground="#d9d9d9")
        self.ButtonFitModel.configure(highlightcolor="black")
        self.ButtonFitModel.configure(pady="0")
        self.ButtonFitModel.configure(state=DISABLED)
        self.ButtonFitModel.configure(text='''Fit model''')

        self.TextLog = Text(top)
        self.TextLog.place(x=1020, y=10, height=330, width=500)
        self.TextLog.configure(background="white")
        self.TextLog.configure(font="TkTextFont")
        self.TextLog.configure(foreground="#000000")
        self.TextLog.configure(highlightbackground="#d9d9d9")
        self.TextLog.configure(highlightcolor="black")
        self.TextLog.configure(insertbackground="black")
        self.TextLog.configure(selectbackground="#c4c4c4")
        self.TextLog.configure(selectforeground="black")
        self.TextLog.configure(state=DISABLED)
        self.TextLog.configure(width=500)
        self.TextLog.configure(wrap=WORD)

        self.CheckbuttonPlotUT = Checkbutton(top)
        self.CheckbuttonPlotUT.place(x=570, y=310, height=31, width=134)
        self.CheckbuttonPlotUT.configure(activebackground="#d9d9d9")
        self.CheckbuttonPlotUT.configure(activeforeground="#000000")
        self.CheckbuttonPlotUT.configure(anchor=NW)
        self.CheckbuttonPlotUT.configure(background="#d9d9d9")
        self.CheckbuttonPlotUT.configure(command=gui_support.gui_support.is_fit_changed)
        self.CheckbuttonPlotUT.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonPlotUT.configure(foreground="#000000")
        self.CheckbuttonPlotUT.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonPlotUT.configure(highlightcolor="black")
        self.CheckbuttonPlotUT.configure(justify=LEFT)
        self.CheckbuttonPlotUT.configure(state=DISABLED)
        self.CheckbuttonPlotUT.configure(text='''Uniaxial tension''')
        self.CheckbuttonPlotUT.configure(variable=gui_support.gui_support.isPlot[0])

        self.CheckbuttonPlotET = Checkbutton(top)
        self.CheckbuttonPlotET.place(x=730, y=310, height=31, width=154)
        self.CheckbuttonPlotET.configure(activebackground="#d9d9d9")
        self.CheckbuttonPlotET.configure(activeforeground="#000000")
        self.CheckbuttonPlotET.configure(anchor=NW)
        self.CheckbuttonPlotET.configure(background="#d9d9d9")
        self.CheckbuttonPlotET.configure(command=gui_support.gui_support.is_fit_changed)
        self.CheckbuttonPlotET.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonPlotET.configure(foreground="#000000")
        self.CheckbuttonPlotET.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonPlotET.configure(highlightcolor="black")
        self.CheckbuttonPlotET.configure(justify=LEFT)
        self.CheckbuttonPlotET.configure(state=DISABLED)
        self.CheckbuttonPlotET.configure(text='''Equibiaxial tension''')
        self.CheckbuttonPlotET.configure(variable=gui_support.gui_support.isPlot[1])

        self.CheckbuttonPlotPS = Checkbutton(top)
        self.CheckbuttonPlotPS.place(x=900, y=310, height=31, width=97)
        self.CheckbuttonPlotPS.configure(activebackground="#d9d9d9")
        self.CheckbuttonPlotPS.configure(activeforeground="#000000")
        self.CheckbuttonPlotPS.configure(anchor=NW)
        self.CheckbuttonPlotPS.configure(background="#d9d9d9")
        self.CheckbuttonPlotPS.configure(command=gui_support.gui_support.is_fit_changed)
        self.CheckbuttonPlotPS.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonPlotPS.configure(foreground="#000000")
        self.CheckbuttonPlotPS.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonPlotPS.configure(highlightcolor="black")
        self.CheckbuttonPlotPS.configure(justify=LEFT)
        self.CheckbuttonPlotPS.configure(state=DISABLED)
        self.CheckbuttonPlotPS.configure(text='''Pure shear''')
        self.CheckbuttonPlotPS.configure(variable=gui_support.gui_support.isPlot[2])

        self.Label4 = Label(top)
        self.Label4.place(x=520, y=310,  height=26, width=35)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(anchor=NW)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Plot:''')

        self.Label6 = Label(top)
        self.Label6.place(x=30, y=490,  height=26, width=6)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(textvariable=gui_support.dummy)

        self.menubar = Menu(top,font=font9,bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)



        self.TextState = Text(top)
        self.TextState.place(x=510, y=10, height=270, width=500)
        self.TextState.configure(background="white")
        self.TextState.configure(font=font9)
        self.TextState.configure(foreground="black")
        self.TextState.configure(highlightbackground="#d9d9d9")
        self.TextState.configure(highlightcolor="black")
        self.TextState.configure(insertbackground="black")
        self.TextState.configure(selectbackground="#c4c4c4")
        self.TextState.configure(selectforeground="black")
        self.TextState.configure(state=DISABLED)
        self.TextState.configure(width=500)
        self.TextState.configure(wrap=WORD)

        self.FrameError = Frame(top)
        self.FrameError.place(x=1020, y=350, height=280, width=500)
        self.FrameError.configure(relief=GROOVE)
        self.FrameError.configure(borderwidth="2")
        self.FrameError.configure(relief=GROOVE)
        self.FrameError.configure(background="#d9d9d9")
        self.FrameError.configure(highlightbackground="#d9d9d9")
        self.FrameError.configure(highlightcolor="black")
        self.FrameError.configure(width=615)

        self.FrameNavigationError = Frame(top)
        self.FrameNavigationError.place(x=1020, y=640, height=40, width=500)
        self.FrameNavigationError.configure(relief=GROOVE)
        self.FrameNavigationError.configure(borderwidth="2")
        self.FrameNavigationError.configure(relief=GROOVE)
        self.FrameNavigationError.configure(background="#d9d9d9")
        self.FrameNavigationError.configure(highlightbackground="#d9d9d9")
        self.FrameNavigationError.configure(highlightcolor="black")
        self.FrameNavigationError.configure(width=615)






if __name__ == '__main__':
    vp_start_gui()



